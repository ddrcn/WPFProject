<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:myviewmodel="clr-namespace:MyKDZ.ViewModel"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        xmlns:local="clr-namespace:MyKDZ"
        xmlns:model="clr-namespace:MyKDZ.Model"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" x:Class="MyKDZ.MainWindow"
        mc:Ignorable="d"
        xmlns:wallpaperConverterPath="clr-namespace:MyKDZ.Model"
        d:DataContext="{d:DesignInstance Type={x:Type myviewmodel:MainWindowViewModel}}"
        Title="Game" Height="450" Width="800"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"
    xmlns:system="clr-namespace:System;assembly=mscorlib" 
        
        FontFamily="{DynamicResource MaterialDesignFont}" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" WindowState="Maximized" Background="{DynamicResource MaterialDesignBackground}" WindowStyle="None" >

    <Window.InputBindings>
        <KeyBinding Command="{Binding Path=CloseWindowDialogSaveAs}" CommandParameter="SaveAs" Modifiers="Ctrl" Key="S"/>
        <KeyBinding Command="{Binding Path=RePlayCommand}"  Modifiers="Ctrl" Key="R"/>
    </Window.InputBindings>



    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary>
                    <wallpaperConverterPath:WallpaperConverter x:Key="wallpaperConverter"/>

                </ResourceDictionary>
                <ResourceDictionary>
                    <model:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <myviewmodel:MainWindowViewModel />
    </Window.DataContext>

    <!--<Viewbox MaxHeight="800"  >-->

    <materialDesign:DialogHost CloseOnClickAway="True"  IsOpen="{Binding IsCloseDialogOpen}" Style="{StaticResource MaterialDesignEmbeddedDialogHost}">
        <materialDesign:DialogHost.DialogContent>
            <StackPanel Orientation="Vertical" Margin="70" Height="auto">
                <TextBlock HorizontalAlignment="Center" Style="{DynamicResource TextBlockStyle}" Text="Что вы хотите сделать?" Margin="0 0 0 25"  />
                <StackPanel Orientation="Vertical" Width="350" Height="auto"  >
                    <Button Margin="0 0 0 20"
    Style="{StaticResource MaterialDesignRaisedButton}"
                            Command="{Binding CloseWindowDialog}" CommandParameter="True"
    
    ToolTip="Быстрое сохранение и выход в главное меню">
                        Вернуться в главное меню
                    </Button>

                    <Button Margin="0 0 0 20"
    Style="{StaticResource MaterialDesignRaisedButton}"
                            Command="{Binding CloseWindowDialogSaveAs}" CommandParameter="SaveAs"
    
    ToolTip="Сохранить игру (Ctrl+S)">
                        Сохранить игру как...
                    </Button>

                    <Button Margin="0 0 0 20"
    Style="{StaticResource MaterialDesignRaisedButton}" 
                            Command="{Binding RePlayCommand}"
    
    ToolTip="Переиграть раунд (Ctrl+R)" BorderBrush="{x:Null}">
                        Переиграть раунд
                    </Button>

                    <Button Margin="0 0 0 20"
    Style="{StaticResource MaterialDesignRaisedButton}" Background="#FFFF4747" BorderBrush="{x:Null}"
                            Command="{Binding CloseWindow}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}, Mode=FindAncestor}}"
    
    ToolTip="Выход из игры с сохранением данных">
                        Выход
                    </Button>



                    <Button Margin="0 60 0 0"
    Style="{StaticResource MaterialDesignRaisedButton}" IsCancel="True"
                            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" CommandParameter="Menu"
    
    ToolTip="Закрыть меню выхода">
                        Назад
                    </Button>
                    <StackPanel Orientation="Horizontal" Margin="0 30 0 10">
                        <Label Style="{DynamicResource MaterialDesignLabel}">
                            Дополнительные функции:
                        </Label>
                        <ToggleButton Margin="5 0 0 0" x:Name="extensionFuncToggle"
  Style="{StaticResource MaterialDesignSwitchDarkToggleButton}"
  ToolTip="MaterialDesignSwitchDarkToggleButton"
  IsChecked="False" />
                    </StackPanel>

                    <Button Margin="0 0 0 20"
    Style="{StaticResource MaterialDesignRaisedButton}"
                            Command="{Binding CloseWindowDialogWithoutSave}" CommandParameter="False"
    Visibility="{Binding ElementName=extensionFuncToggle, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}, ConverterParameter=hide}"
    ToolTip="Переход в главное меню без сохранения текущей игры">
                        Вернуться в главное меню без сохранения
                    </Button>

                    <Button Margin="0 0 0 20"
    Style="{StaticResource MaterialDesignRaisedButton}" Background="#FFFF4747" BorderBrush="{x:Null}"
                            Command="{Binding CloseWindowWithoutSaving}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}, Mode=FindAncestor}}"
    Visibility="{Binding ElementName=extensionFuncToggle, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}, ConverterParameter=hide}"
    ToolTip="Выход из игры без сохранения данных">
                        Выход без сохранения
                    </Button>

                </StackPanel>
            </StackPanel>
        </materialDesign:DialogHost.DialogContent>




        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>





            <Grid Grid.Row="0" Background="{DynamicResource Header}">
                <StackPanel x:Name="UserCardStackPanel" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Left" Height="46"  MinHeight="46" MinWidth="300"  >







                    <materialDesign:Flipper  IsEnabled="{Binding IsNameButtonOn}" Visibility="{Binding IsNameButtonOn}" Margin="10,0,0,0"  VerticalAlignment="Center"  Height="43"  MinHeight="43" >
                        <materialDesign:Flipper.FrontContent>



                            <Button BorderBrush="{x:Null}" Margin="20,2,0,0" Background="{DynamicResource UserCardBackground}"  Style="{DynamicResource MaterialDesignRaisedAccentButton}" materialDesign:ButtonAssist.CornerRadius="25 25 0 0" Command="{x:Static materialDesign:Flipper.FlipCommand}"   MinHeight="{Binding ElementName=anotherFlipperButton, Path=MinHeight}" MinWidth="{Binding ElementName=anotherFlipperButton, Path=MinWidth}"   VerticalAlignment="Top">
                                <StackPanel  Orientation="Horizontal" HorizontalAlignment="Left" Margin="0" MinWidth="200">
                                    <Image Margin="-20,0,0,0"  Source="..\Resources\Images\AvatarM.png"   MinHeight="43" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    <TextBlock  Margin="30,0,0,0" Foreground="{DynamicResource UserCardFontColor}"  Style="{StaticResource MaterialDesignBody1TextBlock}" VerticalAlignment="Center" HorizontalAlignment="Right" Text="{Binding UserName, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Width="auto"/>
                                </StackPanel>

                            </Button>



                        </materialDesign:Flipper.FrontContent>

                        <materialDesign:Flipper.BackContent>
                            <Button x:Name="anotherFlipperButton" BorderBrush="{x:Null}" Margin="20,2,0,0" Background="{DynamicResource UserCardBackground}" Style="{StaticResource MaterialDesignRaisedAccentButton}" materialDesign:ButtonAssist.CornerRadius="25 25 0 0" Command="{x:Static materialDesign:Flipper.FlipCommand}"    MinHeight="42" MinWidth="300" MaxWidth="300" VerticalAlignment="Top">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"  Margin="0"  MinWidth="200">
                                    <Image Margin="-20,0,0,0" gif:ImageBehavior.AnimatedSource="..\Resources\Images\Frog.gif"    MinHeight="43" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    <TextBox Foreground="{DynamicResource UserCardFontColor}"  Margin="10,0,0,0" MaxLength="23" Height="30" MaxHeight="30" Padding="0" Width="auto" MinWidth="100" MinHeight="30"
  x:Name="NameTextBox"
  materialDesign:HintAssist.Hint="Гость"
  materialDesign:HintAssist.Foreground="ForestGreen"
                                          VerticalAlignment="Center"
  >
                                        <TextBox.Text>
                                            <Binding
      Path="UserName"
      UpdateSourceTrigger="LostFocus">

                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>


                                </StackPanel>

                            </Button>


                        </materialDesign:Flipper.BackContent>

                    </materialDesign:Flipper>








                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">


                    <ToggleButton x:Name="wallpaperToggle" IsChecked="{Binding PhotoOrVideoWallpaper, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
    Style="{StaticResource MaterialDesignActionToggleButton}"
    Margin="0,0,35,0"  ToolTip="Живые обои (грузит комп)">
                        <ToggleButton.Background>
                            <ImageBrush/>
                        </ToggleButton.Background>
                        <materialDesign:ToggleButtonAssist.OnContent>
                            <materialDesign:PackIcon Kind="TelevisionStop" Foreground="#FFE08110" Width="40" Height="25" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <materialDesign:PackIcon.Background>
                                    <ImageBrush/>
                                </materialDesign:PackIcon.Background>
                            </materialDesign:PackIcon>
                        </materialDesign:ToggleButtonAssist.OnContent>
                        <materialDesign:PackIcon
     Kind="TelevisionPlay" Foreground="#FF78D606" Width="40" Height="25" VerticalAlignment="Center" HorizontalAlignment="Center" Focusable="False">
                            <materialDesign:PackIcon.Background>
                                <ImageBrush/>
                            </materialDesign:PackIcon.Background>
                        </materialDesign:PackIcon>
                    </ToggleButton>

                    <ToggleButton
  Style="{StaticResource MaterialDesignActionToggleButton}" IsChecked="{Binding Theme,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
   Margin="0,0,25,0" Command="{Binding ThemeToggle, IsAsync=False}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self},IsAsync=False}" ToolTip="Сменить тему">
                        <ToggleButton.Background>
                            <ImageBrush/>
                        </ToggleButton.Background>
                        <materialDesign:ToggleButtonAssist.OnContent>
                            <materialDesign:PackIcon
      Kind="MoonAndStars" Foreground="DimGray" Width="40" Height="25" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <materialDesign:PackIcon.Background>
                                    <ImageBrush/>
                                </materialDesign:PackIcon.Background>
                            </materialDesign:PackIcon>
                        </materialDesign:ToggleButtonAssist.OnContent>
                        <materialDesign:PackIcon
      Kind="WhiteBalanceSunny" Foreground="#FFF9F99A" Width="40" Height="25" VerticalAlignment="Center" HorizontalAlignment="Center" Focusable="False">
                            <materialDesign:PackIcon.Background>
                                <ImageBrush/>
                            </materialDesign:PackIcon.Background>
                        </materialDesign:PackIcon>
                    </ToggleButton>





                    <Button Command="{Binding CloseDialog}"  IsCancel="True"
  Style="{DynamicResource MaterialDesignIconButton}"
  Foreground="#FFFF160B" HorizontalAlignment="Right" Margin="0,0,10,0" ToolTip="Выход" IsTabStop="False" Focusable="False">
                        <Button.Background>
                            <ImageBrush/>
                        </Button.Background>
                        <materialDesign:PackIcon
    Kind="Power" Width="50" />
                    </Button>
                </StackPanel>
            </Grid>

            <materialDesign:Card x:Name="cardPage" MinHeight="340"
    materialDesign:ShadowAssist.ShadowDepth="Depth3"
     Margin="20" Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">

                <Grid Width="{Binding ElementName=cardPage, Path=Width}" Height="{Binding ElementName=cardPage, Path=Height}" >
                    <!-- <ContentControl x:Name="photoWallpaper" Content="{Binding PhotoWallpaper}" Visibility="{Binding PhotoVisibility, UpdateSourceTrigger=PropertyChanged}"/>
                <ContentControl x:Name="videoWallpaper" Content="{Binding VideoWallpaper}" Visibility="{Binding VideoVisibility, UpdateSourceTrigger=PropertyChanged}" />
               -->






                    <ContentControl x:Name="wallpapersControl">
                        <ContentControl.Content>
                            <MultiBinding Converter="{StaticResource wallpaperConverter}" UpdateSourceTrigger="PropertyChanged">
                                <Binding Path="PhotoWallpaper"/>
                                <Binding Path="VideoWallpaper"/>
                                <Binding ElementName="wallpaperToggle" Path="IsChecked" UpdateSourceTrigger="PropertyChanged"/>
                            </MultiBinding>
                        </ContentControl.Content>
                    </ContentControl>

                    <Frame x:Name="Page" MaxHeight="{Binding ElementName=cardPage, Path=Height}" Width="{Binding ElementName=cardPage, Path=Width}" Grid.Row="1" Content="{Binding Page}" NavigationUIVisibility="Hidden" JournalOwnership="UsesParentJournal" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">

                    </Frame>



                </Grid>


            </materialDesign:Card>


        </Grid>
    </materialDesign:DialogHost>
    <!--</Viewbox>-->
</Window>
